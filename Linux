# Comandos Linux para o terminal

## Tornar-se administrador
sudo            //Tornar-se administrador

## Atualizações do sistema
sudo apt update        //Atualizar o sources.list
sudo apt upgrade       //Atualizar o sistema
sudo apt full-upgrade  //Forçar atualização completa
sudo apt dist-upgrade   //Forçar atualização do Kernel
sudo apt install       //Instalar um ou mais softwares (por exemplo, git; vim; kolourpaint)

##  Manutenção do sistema
sudo apt autoremove   //Remover software desnecessário
sudo apt autoclean    //Limpar o cache do apt

##  Histórico de comandos
history               //Verificar o histórico de comandos feitos anteriormente

##  Reiniciar e desligar
sudo reboot           //Reiniciar a máquina
sudo poweroff         //Desligar a máquina

## ⌨️ Atalhos do sistema
ctrl + alt + backspace  //Reiniciar o Cinnamon
ctrl + L                //Limpar o histórico do terminal
ctrl + D                //Sair
ctrl + alt + T          //Abrir terminal
ctrl + alt + F1-F6      //Acessar TTY
ctrl + alt + F7         //Fechar TTY
Tab                     //Completar palavras no terminal

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Aula - Dia 18/10/2024

## 01. Iniciar o GNU/Linux Mint 21.3 (Virginia)
- Iniciar a máquina virtual, se logar e aguardar os procedimentos da aula.
- Deixar logados os sites: GitHub e ChatGPT.
- Manter abertos os sites: Guia Foca e SS64.

## 02. Conhecer os Recursos do MintUpdate e suas Configurações
- OK

## 03. Conhecer o Terminal BASH SHELL do GNU/Linux Mint
- Ctrl + Alt + T = Bash/Shell
- Ctrl + Alt + F1-6 = TTY
- Ctrl + Alt + F7 = Cinnamon
- Ctrl + D = Exit
- Ctrl + L = Clean
- Ctrl + Alt + Backspace = Reiniciar o Cinnamon
- Autocompletar: TAB
- Navegação: Setas

## 04. Conhecer e Atualizar o Sistema via Terminal
sudo                     # tornar administrador do  terminal (colocar sudo sempre na frente do script)
sudo apt update          # Atualizar o sources.list
sudo apt upgrade         # Atualizar o sistema
sudo apt full-upgrade    # Forçar atualização completa
sudo apt dist-upgrade    # Forçar atualização de Kernel
sudo apt autoremove      # Remover softwares desnecessários
sudo apt autoclean       # Limpeza do Cache do Apt
history                  # Histórico de comandos
sudo reboot              # Reiniciar a máquina

## 05. Instalando os Primeiros Softwares via GDEB
- Google Chrome (.deb) - Site Oficial: https://www.google.com/intl/pt-BR/chrome/
- Opera (.deb) - Site Oficial: https://www.opera.com/pt-br
- Edge for Linux (.deb) - Site Oficial (BETA): https://www.microsoft.com/pt-br/edge/download?form=MA13FJ

## 06. Instalando os Primeiros Softwares via Terminal
sudo apt update
sudo apt install (git - vim - kolourpaint)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Aula dia 22/10/2024
Observação importante:
O Microsoft WSL (Windows Subsystem for Linux) permite rodar um ambiente Linux no Windows, sem precisar de uma máquina virtual. (Ele ajuda a ver se a programação vai rodar no Linux ou não.)

Pontos importantes: $ - # - ~

$ = Usuário comum
# = Usuário Root
~ = (Alias) Seu diretório pessoal, onde você pode fazer tudo. (Localização)
Comandos:
A gente tem dois tipos de ajuda: help (ele ajuda no comando) e man (mostra o manual do comando).

pwd = Mostra o nome e caminho do meu diretório atual. (Localização)
Comando (LS e suas abreviações)
ls = Listar arquivos e diretórios no Linux

ls -l = Listar arquivos (de forma mais detalhada)

ls -lh = O mesmo que acima, mas com tamanhos abreviados (K, G, M)

ls -lha = Lista TODOS os arquivos, incluindo ocultos

Dicas:

Tudo que começa com ponto (.) é arquivo ou diretório oculto.
Branco = Arquivo
Azul = Diretório
Verde (marca-texto) = PERIGO!
Na primeira coluna:
d = Diretório
- = Arquivo
l = Atalho
Comando (CD e suas abreviações)
cd = Mudar diretório
cd - = Voltar uma etapa (apenas uma vez, como um Ctrl Z)
cd / = Subir ao nível raiz

------------------------------------------------------------------------------------------------------------------------------------------------------------------
Aula - Dia 24/10/2024
Comando cat:

O cat é usado para concatenar e exibir o conteúdo de arquivos no terminal.
Sintaxe: cat [opções] [arquivo].
Comandos > e >>:

> redireciona a saída de um comando para um arquivo, sobrescrevendo o conteúdo.
>> redireciona a saída para um arquivo, mas adiciona ao conteúdo existente.
Comando tac:

O tac é o inverso do cat. Ele exibe o conteúdo de um arquivo na ordem inversa, linha por linha.
Caractere | (pipe):

O pipe (|) conecta a saída de um comando à entrada de outro, permitindo encadear comandos.
Comando tail:

O tail exibe as últimas linhas de um arquivo.
Sintaxe: tail [opções] [arquivo].
Comando head:

O head exibe as primeiras linhas de um arquivo.
Sintaxe: head [opções] [arquivo].
Remoção de linhas específicas de um arquivo:

Para excluir linhas de 1 a 99 e 201 a 361, e visualizar apenas as linhas 100 a 200, você pode usar uma combinação de comandos sed e awk.
Comando cat -n | head -n 200 arquivo.txt | tail -n 101:

A lógica: numera as linhas do arquivo, pega as 200 primeiras e, em seguida, as últimas 101 linhas desse conjunto, resultando em linhas de 100 a 200.
Comando less:

O less é um pager que permite visualizar o conteúdo de arquivos grandes de maneira interativa.
Comando cp:

O cp é usado para copiar arquivos e diretórios.
Sintaxe: cp [opções] origem destino.
Comando bkp:

Não é um comando padrão. Pode ser um script personalizado para fazer backups. O uso de comandos comuns como cp, tar, ou rsync é comum para backups.
Comando mv:

O mv é usado para mover ou renomear arquivos e diretórios.
Sintaxe: mv [opções] origem destino.
Comando rm:

O rm é utilizado para remover arquivos e diretórios.
Sintaxe: rm [opções] arquivo(s).
Comando git pull:

O git pull atualiza o repositório local com as alterações do repositório remoto, combinando fetch e merge.
Comando sudo dpkg:

O dpkg é utilizado para gerenciar pacotes em sistemas baseados em Debian, permitindo a instalação, remoção e consulta de pacotes .deb.
O ChatGPT disse:
ChatGPT
Aqui está o texto formatado de maneira mais clara:

Comando cat
O cat é usado para concatenar e exibir o conteúdo de arquivos no terminal.
Sintaxe: cat [opções] [arquivo].

Comandos > e >>
>: Redireciona a saída de um comando para um arquivo, sobrescrevendo o conteúdo.
>>: Redireciona a saída para um arquivo, mas adiciona ao conteúdo existente.
Comando tac
O tac é o inverso do cat, exibindo o conteúdo de um arquivo na ordem inversa, linha por linha.

Caractere | (pipe)
O pipe (|) conecta a saída de um comando à entrada de outro, permitindo encadear comandos.

Comando tail
O tail exibe as últimas linhas de um arquivo.
Sintaxe: tail [opções] [arquivo].

Comando head
O head exibe as primeiras linhas de um arquivo.
Sintaxe: head [opções] [arquivo].

Remoção de Linhas Específicas de um Arquivo
Para excluir linhas de 1 a 99 e 201 a 361, e visualizar apenas as linhas 100 a 200, você pode usar uma combinação de comandos sed e awk.
Exemplo de comando:

bash
Copiar código
cat -n arquivo.txt | head -n 200 | tail -n 101
Lógica: Numera as linhas do arquivo, pega as 200 primeiras e, em seguida, as últimas 101 linhas desse conjunto, resultando em linhas de 100 a 200.

Comando less
O less é um pager que permite visualizar o conteúdo de arquivos grandes de maneira interativa.

Comando cp
O cp é usado para copiar arquivos e diretórios.
Sintaxe: cp [opções] origem destino.

Comando bkp
Não é um comando padrão; pode ser um script personalizado para fazer backups. O uso de comandos comuns como cp, tar ou rsync é frequente para backups.

Comando mv
O mv é usado para mover ou renomear arquivos e diretórios.
Sintaxe: mv [opções] origem destino.

Comando rm
O rm é utilizado para remover arquivos e diretórios.
Sintaxe: rm [opções] arquivo(s).

Comando git pull
O git pull atualiza o repositório local com as alterações do repositório remoto, combinando fetch e merge.

Comando sudo dpkg
O dpkg é utilizado para gerenciar pacotes em sistemas baseados em Debian, permitindo a instalação, remoção e consulta de pacotes .deb.

cd .. = Descer um nível
cd ~/ = Subir nível por nível
cd ../ = Descer nível por nível
/ = Root (raiz)
~ = Diretório pessoal (início)

mkdir = Cria diretório (uma pasta)

mkdir + nome = Cria uma pasta
mkdir -v + nome = Cria algo dentro da pasta
echo = Repete o que eu escrever.
Exemplo: echo "senac" vai repetir "senac".

touch = Altera a hora e a data do arquivo (se o arquivo não existir, ele o cria).

Para colocar um arquivo de texto dentro da pasta, escreva:
echo "Matheus Pinheiro" > nome-do-arquivo.txt

Caminhos:
Caminho absoluto
Caminho alternativo

## 07. Instalando os Primeiros Softwares via Gerenciador de Aplicativos
- ttf-mscorefonts-installer
- p7zip-rar
----------------------------------------------------------------------------------------------------------------------------------------------------------------------



